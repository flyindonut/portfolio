name: Build and Deploy to DigitalOcean

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build Frontend and Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies (Frontend)
        run: |
          cd frontend
          npm install

      - name: Build Frontend
        run: |
          cd frontend
          npm run build

      - name: Install dependencies (Backend)
        run: |
          cd backend
          npm install

      - name: Build Backend
        run: |
          cd backend
          npm run build

  check_changes:
    name: Check Changes in Frontend/Backend
    runs-on: ubuntu-latest
    needs: build
    outputs:
      backend: ${{ steps.changes.outputs.backend }}
      frontend: ${{ steps.changes.outputs.frontend }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for changes in backend or frontend
        id: changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'

  deploy_backend:
    name: Deploy Backend
    needs: check_changes
    if: needs.check_changes.outputs.backend == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Backend to DigitalOcean
        run: |
          curl -X POST "https://api.digitalocean.com/v2/apps/${{ secrets.DO_BACKEND_APP_ID }}/deployments" \
               -H "Authorization: Bearer ${{ secrets.DO_API_KEY }}" \
               -H "Content-Type: application/json"

  deploy_frontend:
    name: Deploy Frontend
    needs: check_changes
    if: needs.check_changes.outputs.frontend == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Frontend to DigitalOcean
        run: |
          curl -X POST "https://api.digitalocean.com/v2/apps/${{ secrets.DO_FRONTEND_APP_ID }}/deployments" \
               -H "Authorization: Bearer ${{ secrets.DO_API_KEY }}" \
               -H "Content-Type: application/json"
